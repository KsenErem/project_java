(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("moment"), require("vue"));
	else if(typeof define === 'function' && define.amd)
		define(["moment", "vue"], factory);
	else if(typeof exports === 'object')
		exports["vdprDatePicker"] = factory(require("moment"), require("vue"));
	else
		root["vdprDatePicker"] = factory(root["moment"], root["Vue"]);
})(self, function(__WEBPACK_EXTERNAL_MODULE__192__, __WEBPACK_EXTERNAL_MODULE__976__) {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 744:
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
// runtime helper for setting properties on components
// in a tree-shakable way
exports["default"] = (sfc, props) => {
    const target = sfc.__vccOpts || sfc;
    for (const [key, val] of props) {
        target[key] = val;
    }
    return target;
};


/***/ }),

/***/ 192:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__192__;

/***/ }),

/***/ 976:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__976__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "CalendarDialog": () => (/* reexport */ CalendarDialog),
  "default": () => (/* binding */ DatePicker)
});

// EXTERNAL MODULE: external {"commonjs":"vue","commonjs2":"vue","amd":"vue","root":"Vue"}
var external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_ = __webpack_require__(976);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/DatePicker.vue?vue&type=template&id=5d8b0929

var _hoisted_1 = {
  "class": "vdpr-datepicker"
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_date_input = (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.resolveComponent)("date-input");

  var _component_calendar_dialog = (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.resolveComponent)("calendar-dialog");

  return (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)("div", _hoisted_1, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createVNode)(_component_date_input, {
    type: $options.showingDateInput ? 'text' : 'hidden',
    language: $props.language,
    selectedStartDate: $data.selectedStartDate,
    selectedEndDate: $data.selectedEndDate,
    format: $props.format,
    sameDateFormat: $props.sameDateFormat,
    refName: $props.dateInput.refName,
    inputClass: $props.dateInput.inputClass,
    name: $props.dateInput.name,
    id: $props.dateInput.id,
    placeholder: $props.dateInput.placeholder,
    required: $props.dateInput.required,
    onOnClick: $options.onClickDateInput
  }, null, 8
  /* PROPS */
  , ["type", "language", "selectedStartDate", "selectedEndDate", "format", "sameDateFormat", "refName", "inputClass", "name", "id", "placeholder", "required", "onOnClick"]), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.withDirectives)((0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createVNode)(_component_calendar_dialog, {
    language: $props.language,
    inline: $props.inline,
    initialDates: $props.initialDates,
    disabledDates: $props.disabledDates,
    availableDates: $props.availableDates,
    showHelperButtons: $props.showHelperButtons,
    helperButtons: $props.helperButtons,
    dateInput: $props.calendarDateInput,
    timeInput: $props.calendarTimeInput,
    switchButtonLabel: $props.switchButtonLabel,
    switchButtonInitial: $props.switchButtonInitial,
    applyButtonLabel: $props.applyButtonLabel,
    resetButtonLabel: $props.resetButtonLabel,
    isMondayFirst: $props.isMondayFirst,
    onOnApply: $options.onApply,
    onOnReset: $options.onReset,
    onSelectDate: $options.selectDate,
    onSelectDisabledDate: $options.selectDisabledDate,
    onOnPrevCalendar: $options.onPrevCalendar,
    onOnNextCalendar: $options.onNextCalendar
  }, null, 8
  /* PROPS */
  , ["language", "inline", "initialDates", "disabledDates", "availableDates", "showHelperButtons", "helperButtons", "dateInput", "timeInput", "switchButtonLabel", "switchButtonInitial", "applyButtonLabel", "resetButtonLabel", "isMondayFirst", "onOnApply", "onOnReset", "onSelectDate", "onSelectDisabledDate", "onOnPrevCalendar", "onOnNextCalendar"]), [[external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.vShow, $options.showingCalendarDialog]])]);
}
;// CONCATENATED MODULE: ./src/Components/DatePicker.vue?vue&type=template&id=5d8b0929

;// CONCATENATED MODULE: ./src/Utils/Util.js
/* harmony default export */ const Util = ({
  /**
   * Check if value is Date Object
   *
   * @param {*} value
   * @returns {Boolean}
   */
  isObjectDate: function isObjectDate(value) {
    return Object.prototype.toString.call(value) === '[object Date]';
  },

  /**
   * Get Object Length
   *
   * @param {Object} value
   * @returns {Number}
   */
  getObjectLength: function getObjectLength(value) {
    return Object.keys(value).length;
  },

  /**
   * Check if disabled/available date object is empty
   *
   * @param {Object} value
   * @returns {Boolean}
   */
  isEmptyObject: function isEmptyObject(value) {
    if (value) {
      if (Object.keys(value).length > 0) {
        return false;
      }
    }

    return true;
  }
});
;// CONCATENATED MODULE: ./src/Utils/PropsValidator.js
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }


/* harmony default export */ const PropsValidator = ({
  /**
   * @param {Array} value
   * @returns {Boolean}
   */
  isValidInitialDate: function isValidInitialDate(value) {
    if (!value || value.length === 0) return true;

    var _value = _slicedToArray(value, 2),
        from = _value[0],
        to = _value[1];

    return Util.isObjectDate(from) && Util.isObjectDate(to) && to.getTime() >= from.getTime();
  },

  /**
   * @param {Array} value
   * @returns {Boolean}
   */
  isValidHelperButtons: function isValidHelperButtons(value) {
    if (!value || value.length === 0) return true;
    var filtered = value.filter(function (button) {
      var isButtonNameValid = typeof button.name === 'string' && button.name !== '';
      var isButtonFromDateValid = Util.isObjectDate(button.from);
      var isButtonToDateValid = Util.isObjectDate(button.to);
      return isButtonNameValid && isButtonFromDateValid && isButtonToDateValid;
    });
    return value.length === filtered.length;
  },

  /**
   * @param {Object} value
   * @returns {Boolean}
   */
  isValidDateRestriction: function isValidDateRestriction(value) {
    if (!value || Util.getObjectLength(value) === 0) return true;
    var dates = value.dates,
        from = value.from,
        to = value.to,
        ranges = value.ranges,
        custom = value.custom;

    if (Array.isArray(dates)) {
      var filteredValidDates = dates.filter(function (date) {
        return Util.isObjectDate(date);
      });

      if (filteredValidDates.length !== dates.length) {
        return false;
      }
    }

    if (typeof from !== 'undefined' && !Util.isObjectDate(from)) {
      return false;
    }

    if (typeof to !== 'undefined' && !Util.isObjectDate(to)) {
      return false;
    }

    if (Array.isArray(ranges)) {
      var filterValidRanges = ranges.filter(function (range) {
        return Util.isObjectDate(range.from) && Util.isObjectDate(range.to);
      });

      if (filterValidRanges.length !== ranges.length) {
        return false;
      }
    }

    if (typeof custom !== 'undefined' && typeof custom !== 'function') {
      return false;
    }

    return true;
  },

  /**
   * @param {Object} value
   * @returns {Boolean}
   */
  isValidSameDateFormat: function isValidSameDateFormat(value) {
    if (!value || Util.getObjectLength(value) === 0) return true;
    var from = value.from,
        to = value.to;

    if (typeof from !== 'string' || typeof to !== 'string') {
      return false;
    }

    return true;
  }
});
// EXTERNAL MODULE: external "moment"
var external_moment_ = __webpack_require__(192);
var external_moment_default = /*#__PURE__*/__webpack_require__.n(external_moment_);
;// CONCATENATED MODULE: ./src/Utils/DateUtil.js
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

// eslint-disable-next-line import/no-unresolved



var _default = /*#__PURE__*/function () {
  /**
   * @param {String} lang
   */
  function _default() {
    var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

    _classCallCheck(this, _default);

    this.lang = lang;
    this.localMoment = external_moment_default()().locale(lang);
  }
  /**
   * Create Date
   * @returns {Date}
   */


  _createClass(_default, [{
    key: "createDate",
    value: function createDate() {
      return external_moment_default().apply(void 0, arguments).locale(this.lang).toDate();
    }
    /**
     * Get Day Names
     *
     * @returns {Array}
     */

  }, {
    key: "getDayNames",
    value: function getDayNames() {
      return this.localMoment.localeData().weekdays();
    }
    /**
     * Get Abbreviated Day Names
     *
     * @returns {Array}
     */

  }, {
    key: "getAbbrDayNames",
    value: function getAbbrDayNames() {
      return this.localMoment.localeData().weekdaysShort();
    }
    /**
     * Get Month Names
     * @returns {Array}
     */

  }, {
    key: "getMonthNames",
    value: function getMonthNames() {
      return this.localMoment.localeData().months();
    }
    /**
     * Get Abbreviated Month Names
     *
     * @returns {Array}
     */

  }, {
    key: "getAbbrMonthNames",
    value: function getAbbrMonthNames() {
      return this.localMoment.localeData().monthsShort();
    }
    /**
     * format a date
     *
     * @param {Date} date
     * @param {String} format
     * @returns {String}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "formatDate",
    value: function formatDate(date, format) {
      return external_moment_default()(date).locale(this.lang).format(format);
    }
    /**
     * check for same date only
     *
     * @param {Date} date1
     * @param {Date} date2
     * @return {Boolean}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "isSameDate",
    value: function isSameDate(date1, date2) {
      return external_moment_default()(date1).format('DD MM YYYY') === external_moment_default()(date2).format('DD MM YYYY');
    }
    /**
     * Check for is All Day.
     *
     * @param {Date} fromDate
     * @param {Date} toDate
     * @returns {Boolean}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "isAllDay",
    value: function isAllDay(fromDate, toDate) {
      var startFromDate = external_moment_default()(fromDate).startOf('day');
      var endToDate = external_moment_default()(toDate).endOf('day');
      return external_moment_default()(fromDate).format('DD MM YYYY HH:mm') === startFromDate.format('DD MM YYYY HH:mm') && external_moment_default()(toDate).format('DD MM YYYY HH:mm') === endToDate.format('DD MM YYYY HH:mm');
    }
    /**
     * check if date is valid
     *
     * @param {Date} date
     * @returns {Boolean}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "isValidDate",
    value: function isValidDate(date) {
      return Util.isObjectDate(date) && external_moment_default()(date).isValid();
    }
    /**
     * convert date to unix timestamp
     *
     * @param {Date} date
     * @returns {Number}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "toUnix",
    value: function toUnix(date) {
      return external_moment_default()(date).unix();
    }
    /**
     * convert unix to date
     *
     * @param {Number} unixTimestamp
     * @returns {Date}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "fromUnix",
    value: function fromUnix(unixTimestamp) {
      return external_moment_default().unix(unixTimestamp).toDate();
    }
    /**
     * Get Start Of A Date. refer to moment documentation
     *
     * @param {Date} date
     * @param {String} of
     * @returns {Date}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "startOf",
    value: function startOf(date, of) {
      return external_moment_default()(date).locale(this.lang).startOf(of).toDate();
    }
    /**
     * Get End Of A Date. refer to moment documentation
     *
     * @param {Date} date
     * @param {String} of
     * @returns {Date}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "endOf",
    value: function endOf(date, of) {
      return external_moment_default()(date).locale(this.lang).endOf(of).toDate();
    }
    /**
     * Check if date is before a beforeDate
     *
     * @param {Date} date
     * @param {Date} beforeDate
     * @returns {Boolean}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "isBefore",
    value: function isBefore(date, beforeDate) {
      return external_moment_default()(date).isBefore(beforeDate);
    }
    /**
     * Check if date is same or before a beforeDate
     * @param {Date} date
     * @param {Date} beforeDate
     * @returns {Boolean}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "isSameOrBefore",
    value: function isSameOrBefore(date, beforeDate) {
      return external_moment_default()(date).isSameOrBefore(beforeDate);
    }
    /**
     * Check if date is after a afterDate
     *
     * @param {Date} date
     * @param {Date} beforeDate
     * @returns {Boolean}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "isAfter",
    value: function isAfter(date, afterDate) {
      return external_moment_default()(date).isAfter(afterDate);
    }
    /**
     * Check if date is same or after a afterDate
     * @param {Date} date
     * @param {Date} afterDate
     * @returns {Boolean}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "isSameOrAfter",
    value: function isSameOrAfter(date, afterDate) {
      return external_moment_default()(date).isSameOrAfter(afterDate);
    }
    /**
     * Check if a date is between fromDate and toDate
     * @param {Date} date
     * @param {Date} fromDate
     * @param {Date} toDate
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "isBetween",
    value: function isBetween(date, fromDate, toDate) {
      return external_moment_default()(date).isBetween(fromDate, toDate);
    }
    /**
     * Check if a date is same or between as fromDate and toDate
     *
     * @param {Date} date
     * @param {Date} fromDate
     * @param {Date} toDate
     * @returns {Boolean}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "isSameOrBetween",
    value: function isSameOrBetween(date, fromDate, toDate) {
      var theDate = external_moment_default()(date);
      return theDate.isSameOrAfter(fromDate) && theDate.isSameOrBefore(toDate);
    }
    /**
     * Add Number of timeKey to A Date. refer to moment documentation
     *
     * @param {Date} date
     * @param {Number} number
     * @param {String} timeKey
     * @returns {Date}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "add",
    value: function add(date, number, timeKey) {
      return external_moment_default()(date).locale(this.lang).add(number, timeKey).toDate();
    }
    /**
     * Subtract Number of timeKey to A Date. refer to moment documentation
     *
     * @param {Date} date
     * @param {Number} number
     * @param {String} timeKey
     * @returns {Date}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "subtract",
    value: function subtract(date, number, timeKey) {
      return external_moment_default()(date).locale(this.lang).subtract(number, timeKey).toDate();
    }
    /**
     * Get Number of Day in A month from A Date
     *
     * @param {Date} date
     * @returns {Number}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "daysInMonth",
    value: function daysInMonth(date) {
      return external_moment_default()(date).daysInMonth();
    }
    /**
     * Get Day 0 - 6 from A Date
     *
     * @param {Date} date
     * @returns {Number}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "day",
    value: function day(date) {
      return external_moment_default()(date).day();
    }
    /**
     * Get Month 0 - 11 from A Date
     *
     * @param {Date} date
     * @returns {Number}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "month",
    value: function month(date) {
      return external_moment_default()(date).month();
    }
    /**
     * Get Year from A Date
     * @param {Date} date
     * @returns {Number}
     */
    // eslint-disable-next-line class-methods-use-this

  }, {
    key: "year",
    value: function year(date) {
      return external_moment_default()(date).year();
    }
  }]);

  return _default;
}();


;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/DateInput.vue?vue&type=template&id=03bc52d6

var DateInputvue_type_template_id_03bc52d6_hoisted_1 = ["id", "type", "name", "placeholder", "required", "value"];
function DateInputvue_type_template_id_03bc52d6_render(_ctx, _cache, $props, $setup, $data, $options) {
  return (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)("div", null, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("input", {
    id: $props.id,
    type: $props.type,
    ref: $props.refName,
    name: $props.name,
    placeholder: $props.placeholder,
    required: $props.required,
    value: $options.formattedValue,
    "class": (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.normalizeClass)($props.inputClass),
    onClick: _cache[0] || (_cache[0] = function () {
      return $options.onClick && $options.onClick.apply($options, arguments);
    }),
    readonly: ""
  }, null, 10
  /* CLASS, PROPS */
  , DateInputvue_type_template_id_03bc52d6_hoisted_1)]);
}
;// CONCATENATED MODULE: ./src/Components/DateInput.vue?vue&type=template&id=03bc52d6

;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/DateInput.vue?vue&type=script&lang=js

/* harmony default export */ const DateInputvue_type_script_lang_js = ({
  props: {
    inputClass: [String, Object, Array],
    refName: String,
    name: String,
    type: String,
    placeholder: String,
    id: String,
    required: Boolean,
    format: String,
    sameDateFormat: Object,
    language: String,
    selectedStartDate: Date,
    selectedEndDate: Date
  },
  emits: ['on-click'],
  computed: {
    dateUtil: function dateUtil() {
      return new _default(this.language);
    },
    formattedValue: function formattedValue() {
      if (!this.selectedStartDate || !this.selectedEndDate) return '';

      if (this.dateUtil.isSameDate(this.selectedStartDate, this.selectedEndDate)) {
        var _date = this.dateUtil.formatDate(this.selectedStartDate, this.sameDateFormat.from);

        var _date2 = this.dateUtil.formatDate(this.selectedEndDate, this.sameDateFormat.to);

        return "".concat(_date, " - ").concat(_date2);
      }

      var date1 = this.dateUtil.formatDate(this.selectedStartDate, this.format);
      var date2 = this.dateUtil.formatDate(this.selectedEndDate, this.format);
      return "".concat(date1, " - ").concat(date2);
    }
  },
  methods: {
    onClick: function onClick() {
      this.$emit('on-click', true);
    }
  }
});
;// CONCATENATED MODULE: ./src/Components/DateInput.vue?vue&type=script&lang=js
 
// EXTERNAL MODULE: ./node_modules/vue-loader/dist/exportHelper.js
var exportHelper = __webpack_require__(744);
;// CONCATENATED MODULE: ./src/Components/DateInput.vue




;
const __exports__ = /*#__PURE__*/(0,exportHelper["default"])(DateInputvue_type_script_lang_js, [['render',DateInputvue_type_template_id_03bc52d6_render]])

/* harmony default export */ const DateInput = (__exports__);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/CalendarDialog.vue?vue&type=template&id=65ac0926

var CalendarDialogvue_type_template_id_65ac0926_hoisted_1 = {
  key: 0,
  "class": "vdpr-datepicker__calendar-button-helper"
};
var _hoisted_2 = ["onClick"];
var _hoisted_3 = {
  "class": "vdpr-datepicker__calendar-actions"
};
var _hoisted_4 = {
  "class": "vdpr-datepicker__calendar-input-wrapper"
};
var _hoisted_5 = {
  "class": "vdpr-datepicker__calendar-input-wrapper"
};
var _hoisted_6 = {
  "class": "vdpr-datepicker__calendar-input-wrapper vdpr-datepicker__calendar-input-wrapper--end"
};
var _hoisted_7 = {
  "class": "vdpr-datepicker__calendar-input-wrapper"
};
var _hoisted_8 = {
  "class": "vdpr-datepicker__calendar-input-wrapper vdpr-datepicker__calendar-input-wrapper--end"
};
function CalendarDialogvue_type_template_id_65ac0926_render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_calendar = (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.resolveComponent)("calendar");

  var _component_switch_button = (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.resolveComponent)("switch-button");

  var _component_calendar_input_date = (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.resolveComponent)("calendar-input-date");

  var _component_calendar_input_time = (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.resolveComponent)("calendar-input-time");

  return (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)("div", {
    "class": (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.normalizeClass)(["vdpr-datepicker__calendar-dialog", {
      'vdpr-datepicker__calendar-dialog--inline': this.inline
    }])
  }, [$options.helpers.length ? ((0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)("div", CalendarDialogvue_type_template_id_65ac0926_hoisted_1, [((0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(true), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)(external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.Fragment, null, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.renderList)($options.helpers, function (btn) {
    return (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)("button", {
      key: 'btn' + btn.name,
      "class": (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.normalizeClass)(['vdpr-datepicker__button', 'vdpr-datepicker__button--block', 'vdpr-datepicker__button-default']),
      onClick: function onClick() {
        $options.onHelperClick(btn.from, btn.to);
      }
    }, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.toDisplayString)(btn.name), 9
    /* TEXT, PROPS */
    , _hoisted_2);
  }), 128
  /* KEYED_FRAGMENT */
  ))])) : (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createCommentVNode)("v-if", true), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createVNode)(_component_calendar, {
    language: $props.language,
    selectedStartDate: $data.selectedStartDate,
    selectedEndDate: $data.selectedEndDate,
    disabledDates: $props.disabledDates,
    availableDates: $props.availableDates,
    isMondayFirst: $props.isMondayFirst,
    onSelectDate: $options.selectDate,
    onSelectDisabledDate: $options.selectDisabledDate,
    onOnPrevCalendar: $options.onPrevCalendar,
    onOnNextCalendar: $options.onNextCalendar
  }, null, 8
  /* PROPS */
  , ["language", "selectedStartDate", "selectedEndDate", "disabledDates", "availableDates", "isMondayFirst", "onSelectDate", "onSelectDisabledDate", "onOnPrevCalendar", "onOnNextCalendar"]), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("div", _hoisted_3, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("div", _hoisted_4, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("span", null, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.toDisplayString)($props.switchButtonLabel), 1
  /* TEXT */
  ), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createVNode)(_component_switch_button, {
    checked: $data.isAllDay,
    onOnCheckChange: $options.onCheckChange
  }, null, 8
  /* PROPS */
  , ["checked", "onOnCheckChange"])]), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("div", _hoisted_5, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("span", null, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.toDisplayString)($props.dateInput.labelStarts), 1
  /* TEXT */
  ), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createVNode)(_component_calendar_input_date, {
    format: $props.dateInput.format,
    inputClass: $props.dateInput.inputClass,
    timestamp: $options.unixSelectedStartDate,
    language: $props.language,
    onOnChange: $options.onStartInputDateChange
  }, null, 8
  /* PROPS */
  , ["format", "inputClass", "timestamp", "language", "onOnChange"])]), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("div", _hoisted_6, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.withDirectives)((0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createVNode)(_component_calendar_input_time, {
    step: $props.timeInput.step,
    readonly: $props.timeInput.readonly,
    inputClass: $props.timeInput.inputClass,
    timestamp: $options.unixSelectedStartDate,
    onOnChange: $options.onTimeStartInputChange
  }, null, 8
  /* PROPS */
  , ["step", "readonly", "inputClass", "timestamp", "onOnChange"]), [[external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.vShow, $options.isVisibleTimeInput]])]), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("div", _hoisted_7, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("span", null, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.toDisplayString)($props.dateInput.labelEnds), 1
  /* TEXT */
  ), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createVNode)(_component_calendar_input_date, {
    format: $props.dateInput.format,
    inputClass: $props.dateInput.inputClass,
    timestamp: $options.unixSelectedEndDate,
    language: $props.language,
    onOnChange: $options.onEndDateInputDateChange
  }, null, 8
  /* PROPS */
  , ["format", "inputClass", "timestamp", "language", "onOnChange"])]), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("div", _hoisted_8, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.withDirectives)((0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createVNode)(_component_calendar_input_time, {
    step: $props.timeInput.step,
    readonly: $props.timeInput.readonly,
    inputClass: $props.timeInput.inputClass,
    timestamp: $options.unixSelectedEndDate,
    onOnChange: $options.onTimeEndInputChange
  }, null, 8
  /* PROPS */
  , ["step", "readonly", "inputClass", "timestamp", "onOnChange"]), [[external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.vShow, $options.isVisibleTimeInput]])]), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.withDirectives)((0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("button", {
    "class": (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.normalizeClass)(['vdpr-datepicker__button', 'vdpr-datepicker__button--block', 'vdpr-datepicker__button-submit']),
    onClick: _cache[0] || (_cache[0] = function () {
      return $options.onClickButtonApply && $options.onClickButtonApply.apply($options, arguments);
    })
  }, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.toDisplayString)($props.applyButtonLabel), 513
  /* TEXT, NEED_PATCH */
  ), [[external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.vShow, $options.isVisibleButtonApply]]), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("button", {
    "class": (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.normalizeClass)(['vdpr-datepicker__button', 'vdpr-datepicker__button--block', 'vdpr-datepicker__button-reset']),
    onClick: _cache[1] || (_cache[1] = function () {
      return $options.onClickButtonReset && $options.onClickButtonReset.apply($options, arguments);
    })
  }, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.toDisplayString)($props.resetButtonLabel), 1
  /* TEXT */
  )])], 2
  /* CLASS */
  );
}
;// CONCATENATED MODULE: ./src/Components/CalendarDialog.vue?vue&type=template&id=65ac0926

;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/Calendar.vue?vue&type=template&id=58f71eef

var Calendarvue_type_template_id_58f71eef_hoisted_1 = {
  "class": "vdpr-datepicker__calendar"
};
var Calendarvue_type_template_id_58f71eef_hoisted_2 = {
  "class": "vdpr-datepicker__calendar-control"
};
var Calendarvue_type_template_id_58f71eef_hoisted_3 = {
  "class": "vdpr-datepicker__calendar-month-year"
};
var Calendarvue_type_template_id_58f71eef_hoisted_4 = {
  "class": "vdpr-datepicker__calendar-table"
};
var Calendarvue_type_template_id_58f71eef_hoisted_5 = ["onClick"];
function Calendarvue_type_template_id_58f71eef_render(_ctx, _cache, $props, $setup, $data, $options) {
  return (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)("div", Calendarvue_type_template_id_58f71eef_hoisted_1, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("div", Calendarvue_type_template_id_58f71eef_hoisted_2, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("span", {
    "class": (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.normalizeClass)(["vdpr-datepicker__calendar-control-prev", {
      'vdpr-datepicker__calendar-control-disabled': $options.isPrevDisabled
    }]),
    onClick: _cache[0] || (_cache[0] = function () {
      return $options.onPrevClick && $options.onPrevClick.apply($options, arguments);
    })
  }, null, 2
  /* CLASS */
  ), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("span", Calendarvue_type_template_id_58f71eef_hoisted_3, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.toDisplayString)($options.monthYear), 1
  /* TEXT */
  ), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("span", {
    "class": (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.normalizeClass)(["vdpr-datepicker__calendar-control-next", {
      'vdpr-datepicker__calendar-control-disabled': $options.isNextDisabled
    }]),
    onClick: _cache[1] || (_cache[1] = function () {
      return $options.onNextClick && $options.onNextClick.apply($options, arguments);
    })
  }, null, 2
  /* CLASS */
  )]), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("table", Calendarvue_type_template_id_58f71eef_hoisted_4, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("thead", null, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("tr", null, [((0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(true), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)(external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.Fragment, null, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.renderList)($options.dayNames, function (dayName) {
    return (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)("th", {
      key: dayName
    }, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.toDisplayString)(dayName), 1
    /* TEXT */
    );
  }), 128
  /* KEYED_FRAGMENT */
  ))])]), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("tbody", null, [((0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)(external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.Fragment, null, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.renderList)(6, function (row) {
    return (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("tr", {
      key: row
    }, [((0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(true), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)(external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.Fragment, null, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.renderList)($options.getRowDays(row), function (day) {
      return (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)("td", {
        key: day.timestamp,
        "class": (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.normalizeClass)({
          highlighted: day.isBetween || day.isStartDate || day.isEndDate,
          faded: day.isFaded,
          disabled: day.isDisabled
        }),
        onClick: function onClick($event) {
          return $options.selectDate(day);
        }
      }, (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.toDisplayString)(day.dateNumber), 11
      /* TEXT, CLASS, PROPS */
      , Calendarvue_type_template_id_58f71eef_hoisted_5);
    }), 128
    /* KEYED_FRAGMENT */
    ))]);
  }), 64
  /* STABLE_FRAGMENT */
  ))])])]);
}
;// CONCATENATED MODULE: ./src/Components/Calendar.vue?vue&type=template&id=58f71eef

;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/Calendar.vue?vue&type=script&lang=js
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || Calendarvue_type_script_lang_js_unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return Calendarvue_type_script_lang_js_arrayLikeToArray(arr); }

function _toArray(arr) { return Calendarvue_type_script_lang_js_arrayWithHoles(arr) || _iterableToArray(arr) || Calendarvue_type_script_lang_js_unsupportedIterableToArray(arr) || Calendarvue_type_script_lang_js_nonIterableRest(); }

function Calendarvue_type_script_lang_js_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function Calendarvue_type_script_lang_js_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Calendarvue_type_script_lang_js_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Calendarvue_type_script_lang_js_arrayLikeToArray(o, minLen); }

function Calendarvue_type_script_lang_js_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function Calendarvue_type_script_lang_js_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function Calendarvue_type_script_lang_js_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function Calendarvue_type_script_lang_js_createClass(Constructor, protoProps, staticProps) { if (protoProps) Calendarvue_type_script_lang_js_defineProperties(Constructor.prototype, protoProps); if (staticProps) Calendarvue_type_script_lang_js_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function Calendarvue_type_script_lang_js_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }




var Day = /*#__PURE__*/Calendarvue_type_script_lang_js_createClass(function Day(date, isBetween, isStartDate, isEndDate, isDisabled, isFaded) {
  Calendarvue_type_script_lang_js_classCallCheck(this, Day);

  this.date = date;
  this.timestamp = date.getTime();
  this.dateNumber = date.getDate();
  this.isBetween = isBetween;
  this.isStartDate = isStartDate;
  this.isEndDate = isEndDate;
  this.isDisabled = isDisabled;
  this.isFaded = isFaded;
});

/* harmony default export */ const Calendarvue_type_script_lang_js = ({
  props: {
    selectedStartDate: Date,
    selectedEndDate: Date,
    language: String,
    disabledDates: Object,
    availableDates: Object,
    isMondayFirst: Boolean
  },
  data: function data() {
    var _ref, _this$selectedStartDa;

    var dateUtil = new _default(this.language);
    var startDate = (_ref = (_this$selectedStartDa = this.selectedStartDate) !== null && _this$selectedStartDa !== void 0 ? _this$selectedStartDa : this.selectedEndDate) !== null && _ref !== void 0 ? _ref : new Date();
    var pageTimestamp = dateUtil.toUnix(dateUtil.startOf(startDate, 'month'));
    return {
      // stored page time stamp start of a month
      pageTimestamp: pageTimestamp
    };
  },
  emits: ['select-disabled-date', 'select-date', 'on-prev-calendar', 'on-next-calendar'],
  computed: {
    dateUtil: function dateUtil() {
      return new _default(this.language);
    },
    dayNames: function dayNames() {
      var dayNames = this.dateUtil.getAbbrDayNames();

      if (this.isMondayFirst) {
        var _dayNames = _toArray(dayNames),
            sunday = _dayNames[0],
            restOfDays = _dayNames.slice(1);

        return [].concat(_toConsumableArray(restOfDays), [sunday]);
      }

      return dayNames;
    },
    monthYear: function monthYear() {
      var pageDate = this.dateUtil.fromUnix(this.pageTimestamp);
      return this.dateUtil.formatDate(pageDate, 'MMM YYYY');
    },
    days: function days() {
      var pageDate = this.dateUtil.fromUnix(this.pageTimestamp);
      var daysInMonth = this.dateUtil.daysInMonth(pageDate);
      var days = [];
      var preDays = [];
      var postDays = [];

      for (var i = 0; i < daysInMonth; i += 1) {
        days.push(this.constructDay(pageDate, false));
        pageDate = this.dateUtil.add(pageDate, 1, 'd');
      }

      var firstDay = days[0].date;
      var SUNDAY = 0;
      var MONDAY = 1;
      var threshold = this.isMondayFirst ? MONDAY : SUNDAY;

      while (firstDay.getDay() !== threshold) {
        firstDay = this.dateUtil.subtract(firstDay, 1, 'd');
        preDays.unshift(this.constructDay(firstDay, true));
      }

      var lastDay = days[days.length - 1].date;

      for (var k = preDays.length + days.length; k < 42; k += 1) {
        lastDay = this.dateUtil.add(lastDay, 1, 'd');
        postDays.push(this.constructDay(lastDay, true));
      }

      return [].concat(preDays, days, postDays);
    },
    isNextDisabled: function isNextDisabled() {
      if (this.disabledDates && this.disabledDates.from) {
        var _this$disabledDates = this.disabledDates,
            from = _this$disabledDates.from,
            to = _this$disabledDates.to; // next is always available if there's 'to' date intersecting 'from' date

        if (to && this.dateUtil.isAfter(to, from)) {
          return false;
        }

        var pageDate = this.dateUtil.fromUnix(this.pageTimestamp);
        return this.dateUtil.month(from) <= this.dateUtil.month(pageDate) && this.dateUtil.year(from) <= this.dateUtil.year(pageDate) || this.dateUtil.year(from) < this.dateUtil.year(pageDate);
      } // availableDates cannot interfere disabledDates


      if (Util.isEmptyObject(this.disabledDates) && this.availableDates && this.availableDates.to) {
        var _this$availableDates = this.availableDates,
            _from = _this$availableDates.from,
            _to = _this$availableDates.to; // next is always available if there's 'from' date intersecting 'to' date

        if (_from && this.dateUtil.isAfter(_from, _to)) {
          return false;
        }

        var _pageDate = this.dateUtil.fromUnix(this.pageTimestamp);

        return this.dateUtil.month(_to) <= this.dateUtil.month(_pageDate) && this.dateUtil.year(_to) <= this.dateUtil.year(_pageDate) || this.dateUtil.year(_to) < this.dateUtil.year(_pageDate);
      }

      return false;
    },
    isPrevDisabled: function isPrevDisabled() {
      if (this.disabledDates && this.disabledDates.to) {
        var _this$disabledDates2 = this.disabledDates,
            from = _this$disabledDates2.from,
            to = _this$disabledDates2.to; // prev is always available if there's 'from' date intersecting 'to' date

        if (from && this.dateUtil.isBefore(from, to)) {
          return false;
        }

        var pageDate = this.dateUtil.fromUnix(this.pageTimestamp);
        return this.dateUtil.month(to) >= this.dateUtil.month(pageDate) && this.dateUtil.year(to) >= this.dateUtil.year(pageDate) || this.dateUtil.year(to) > this.dateUtil.year(pageDate);
      } // availableDates cannot interfere disabledDates


      if (Util.isEmptyObject(this.disabledDates) && this.availableDates && this.availableDates.from) {
        var _this$availableDates2 = this.availableDates,
            _from2 = _this$availableDates2.from,
            _to2 = _this$availableDates2.to; // prev is always available if there's 'to' date intersecting 'from' date

        if (_to2 && this.dateUtil.isBefore(_to2, _from2)) {
          return false;
        }

        var _pageDate2 = this.dateUtil.fromUnix(this.pageTimestamp);

        return this.dateUtil.month(_from2) >= this.dateUtil.month(_pageDate2) && this.dateUtil.year(_from2) >= this.dateUtil.year(_pageDate2) || this.dateUtil.year(_from2) > this.dateUtil.year(_pageDate2);
      }

      return false;
    }
  },
  methods: {
    getRowDays: function getRowDays(row) {
      var endIndex = row * 7;
      var startIndex = endIndex - 7;
      return this.days.slice(startIndex, endIndex);
    },
    constructDay: function constructDay(date, isFaded) {
      return new Day(date, this.dateUtil.isBetween(date, this.selectedStartDate, this.selectedEndDate), this.dateUtil.isSameDate(date, this.selectedStartDate), this.dateUtil.isSameDate(date, this.selectedEndDate), this.isDisabledDate(date), isFaded);
    },
    isDisabledDate: function isDisabledDate(date) {
      var _this = this;

      if (Util.isEmptyObject(this.disabledDates) && Util.isEmptyObject(this.availableDates)) {
        return false;
      }

      var disabled = false;

      if (!Util.isEmptyObject(this.disabledDates)) {
        var _this$disabledDates3 = this.disabledDates,
            dates = _this$disabledDates3.dates,
            from = _this$disabledDates3.from,
            to = _this$disabledDates3.to,
            ranges = _this$disabledDates3.ranges,
            custom = _this$disabledDates3.custom;

        if (typeof dates !== 'undefined' && Array.isArray(dates)) {
          dates.forEach(function (d) {
            if (_this.dateUtil.isSameDate(d, date)) {
              disabled = true;
            }
          });
          if (disabled) return true;
        }

        if (ranges !== 'undefined' && Array.isArray(ranges)) {
          ranges.forEach(function (range) {
            if (_this.dateUtil.isValidDate(range.from) && _this.dateUtil.isValidDate(range.to)) {
              if (_this.dateUtil.isSameOrBetween(date, range.from, range.to)) {
                disabled = true;
              }
            }
          });
          if (disabled) return true;
        }

        if (this.dateUtil.isValidDate(from) && this.dateUtil.isValidDate(to) && this.dateUtil.isBefore(from, to)) {
          // 'from' date smaller than 'to' date,
          // disabling dates only happens between 'from' & 'to'
          if (this.dateUtil.isSameOrBetween(date, from, to)) {
            disabled = true;
          }
        } else {
          if (this.dateUtil.isValidDate(from) && this.dateUtil.isSameOrAfter(date, from)) {
            disabled = true;
          }

          if (this.dateUtil.isValidDate(to) && this.dateUtil.isSameOrBefore(date, to)) {
            disabled = true;
          }
        }

        if (typeof custom === 'function' && custom(date)) {
          disabled = true;
        }
      } else if (!Util.isEmptyObject(this.availableDates)) {
        disabled = true;
        var _this$availableDates3 = this.availableDates,
            _dates = _this$availableDates3.dates,
            _from3 = _this$availableDates3.from,
            _to3 = _this$availableDates3.to,
            _ranges = _this$availableDates3.ranges,
            _custom = _this$availableDates3.custom;

        if (typeof _dates !== 'undefined' && Array.isArray(_dates)) {
          _dates.forEach(function (d) {
            if (_this.dateUtil.isSameDate(d, date)) {
              disabled = false;
            }
          });

          if (disabled) return true;
        }

        if (_ranges !== 'undefined' && Array.isArray(_ranges)) {
          _ranges.forEach(function (range) {
            if (_this.dateUtil.isValidDate(range.from) && _this.dateUtil.isValidDate(range.to)) {
              if (_this.dateUtil.isSameOrBetween(date, range.from, range.to)) {
                disabled = false;
              }
            }
          });

          if (disabled) return true;
        }

        if (this.dateUtil.isValidDate(_from3) && this.dateUtil.isValidDate(_to3) && this.dateUtil.isBefore(_from3, _to3)) {
          // 'from' date is smaller than 'to' date,
          // enabling dates only happens between 'from' & 'to'
          if (this.dateUtil.isSameOrBetween(date, _from3, _to3)) {
            disabled = false;
          }
        } else {
          if (this.dateUtil.isValidDate(_to3) && this.dateUtil.isSameOrBefore(date, _to3)) {
            disabled = false;
          }

          if (this.dateUtil.isValidDate(_from3) && this.dateUtil.isSameOrAfter(date, _from3)) {
            disabled = false;
          }
        }

        if (typeof _custom === 'function' && _custom(date)) {
          disabled = false;
        }
      }

      return disabled;
    },
    selectDate: function selectDate(day) {
      if (day.isDisabled) {
        return this.$emit('select-disabled-date', day.date);
      }

      return this.$emit('select-date', day.date);
    },
    onPrevClick: function onPrevClick() {
      if (this.isPrevDisabled) return;
      var pageDate = this.dateUtil.subtract(this.dateUtil.fromUnix(this.pageTimestamp), 1, 'month');
      this.pageTimestamp = this.dateUtil.toUnix(pageDate);
      this.$emit('on-prev-calendar');
    },
    onNextClick: function onNextClick() {
      if (this.isNextDisabled) return;
      var pageDate = this.dateUtil.add(this.dateUtil.fromUnix(this.pageTimestamp), 1, 'month');
      this.pageTimestamp = this.dateUtil.toUnix(pageDate);
      this.$emit('on-next-calendar');
    }
  }
});
;// CONCATENATED MODULE: ./src/Components/Calendar.vue?vue&type=script&lang=js
 
;// CONCATENATED MODULE: ./src/Components/Calendar.vue




;
const Calendar_exports_ = /*#__PURE__*/(0,exportHelper["default"])(Calendarvue_type_script_lang_js, [['render',Calendarvue_type_template_id_58f71eef_render]])

/* harmony default export */ const Calendar = (Calendar_exports_);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/SwitchButton.vue?vue&type=template&id=25dc3334

var SwitchButtonvue_type_template_id_25dc3334_hoisted_1 = {
  "class": "vdpr-datepicker__switch"
};
var SwitchButtonvue_type_template_id_25dc3334_hoisted_2 = ["checked"];

var SwitchButtonvue_type_template_id_25dc3334_hoisted_3 = /*#__PURE__*/(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("span", {
  "class": "vdpr-datepicker__switch-slider"
}, null, -1
/* HOISTED */
);

function SwitchButtonvue_type_template_id_25dc3334_render(_ctx, _cache, $props, $setup, $data, $options) {
  return (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)("label", SwitchButtonvue_type_template_id_25dc3334_hoisted_1, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("input", {
    type: "checkbox",
    checked: $props.checked,
    onClick: _cache[0] || (_cache[0] = function () {
      return $options.onClick && $options.onClick.apply($options, arguments);
    })
  }, null, 8
  /* PROPS */
  , SwitchButtonvue_type_template_id_25dc3334_hoisted_2), SwitchButtonvue_type_template_id_25dc3334_hoisted_3]);
}
;// CONCATENATED MODULE: ./src/Components/SwitchButton.vue?vue&type=template&id=25dc3334

;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/SwitchButton.vue?vue&type=script&lang=js
/* harmony default export */ const SwitchButtonvue_type_script_lang_js = ({
  props: {
    checked: Boolean
  },
  emits: ['on-check-change'],
  methods: {
    onClick: function onClick() {
      this.$emit('on-check-change', !this.checked);
    }
  }
});
;// CONCATENATED MODULE: ./src/Components/SwitchButton.vue?vue&type=script&lang=js
 
;// CONCATENATED MODULE: ./src/Components/SwitchButton.vue




;
const SwitchButton_exports_ = /*#__PURE__*/(0,exportHelper["default"])(SwitchButtonvue_type_script_lang_js, [['render',SwitchButtonvue_type_template_id_25dc3334_render]])

/* harmony default export */ const SwitchButton = (SwitchButton_exports_);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/CalendarInputDate.vue?vue&type=template&id=7fb31040

var CalendarInputDatevue_type_template_id_7fb31040_hoisted_1 = {
  "class": "vdpr-datepicker__calendar-input-date"
};
var CalendarInputDatevue_type_template_id_7fb31040_hoisted_2 = ["value"];
function CalendarInputDatevue_type_template_id_7fb31040_render(_ctx, _cache, $props, $setup, $data, $options) {
  return (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)("div", CalendarInputDatevue_type_template_id_7fb31040_hoisted_1, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("input", {
    "class": (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.normalizeClass)(["vdpr-datepicker__calendar-input-date-elem", $props.inputClass]),
    type: "text",
    value: $options.formattedValue,
    onChange: _cache[0] || (_cache[0] = function () {
      return $options.onChange && $options.onChange.apply($options, arguments);
    })
  }, null, 42
  /* CLASS, PROPS, HYDRATE_EVENTS */
  , CalendarInputDatevue_type_template_id_7fb31040_hoisted_2)]);
}
;// CONCATENATED MODULE: ./src/Components/CalendarInputDate.vue?vue&type=template&id=7fb31040

;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/CalendarInputDate.vue?vue&type=script&lang=js

/* harmony default export */ const CalendarInputDatevue_type_script_lang_js = ({
  props: {
    inputClass: [String, Object, Array],
    timestamp: Number,
    format: String,
    language: String
  },
  data: function data() {
    return {
      copyTimestamp: this.timestamp
    };
  },
  emits: ['on-change'],
  watch: {
    timestamp: function timestamp(value) {
      this.copyTimestamp = value;
    }
  },
  computed: {
    dateUtil: function dateUtil() {
      return new _default(this.language);
    },
    formattedValue: function formattedValue() {
      if (this.copyTimestamp === 0) return '';
      var date = this.dateUtil.fromUnix(this.copyTimestamp);
      return this.dateUtil.formatDate(date, this.format);
    }
  },
  methods: {
    onChange: function onChange(e) {
      var lastDate = this.dateUtil.fromUnix(this.copyTimestamp);
      var lastTime = this.dateUtil.formatDate(lastDate, 'HH:mm:ss');
      var date = this.dateUtil.createDate("".concat(e.target.value, " ").concat(lastTime), "".concat(this.format, " HH:mm:ss"));

      if (!this.dateUtil.isValidDate(date)) {
        return false;
      }

      return this.$emit('on-change', date);
    }
  }
});
;// CONCATENATED MODULE: ./src/Components/CalendarInputDate.vue?vue&type=script&lang=js
 
;// CONCATENATED MODULE: ./src/Components/CalendarInputDate.vue




;
const CalendarInputDate_exports_ = /*#__PURE__*/(0,exportHelper["default"])(CalendarInputDatevue_type_script_lang_js, [['render',CalendarInputDatevue_type_template_id_7fb31040_render]])

/* harmony default export */ const CalendarInputDate = (CalendarInputDate_exports_);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/CalendarInputTime.vue?vue&type=template&id=3f3a43b3

var CalendarInputTimevue_type_template_id_3f3a43b3_hoisted_1 = {
  "class": "vdpr-datepicker__calendar-input-time"
};
var CalendarInputTimevue_type_template_id_3f3a43b3_hoisted_2 = ["value", "readonly"];
var CalendarInputTimevue_type_template_id_3f3a43b3_hoisted_3 = {
  "class": "vdpr-datepicker__calendar-input-time-control"
};
function CalendarInputTimevue_type_template_id_3f3a43b3_render(_ctx, _cache, $props, $setup, $data, $options) {
  return (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.openBlock)(), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementBlock)("div", CalendarInputTimevue_type_template_id_3f3a43b3_hoisted_1, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("input", {
    "class": (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.normalizeClass)(["vdpr-datepicker__calendar-input-time-elem", $props.inputClass]),
    type: "text",
    value: $options.formattedValue,
    readonly: $props.readonly,
    onChange: _cache[0] || (_cache[0] = function () {
      return $options.onChange && $options.onChange.apply($options, arguments);
    })
  }, null, 42
  /* CLASS, PROPS, HYDRATE_EVENTS */
  , CalendarInputTimevue_type_template_id_3f3a43b3_hoisted_2), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("div", CalendarInputTimevue_type_template_id_3f3a43b3_hoisted_3, [(0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("span", {
    "class": "vdpr-datepicker__calendar-input-time-control-up",
    onClick: _cache[1] || (_cache[1] = function () {
      return $options.onClickUp && $options.onClickUp.apply($options, arguments);
    })
  }, " ▲ "), (0,external_commonjs_vue_commonjs2_vue_amd_vue_root_Vue_.createElementVNode)("span", {
    "class": "vdpr-datepicker__calendar-input-time-control-down",
    onClick: _cache[2] || (_cache[2] = function () {
      return $options.onClickDown && $options.onClickDown.apply($options, arguments);
    })
  }, " ▼ ")])]);
}
;// CONCATENATED MODULE: ./src/Components/CalendarInputTime.vue?vue&type=template&id=3f3a43b3

;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/CalendarInputTime.vue?vue&type=script&lang=js
function CalendarInputTimevue_type_script_lang_js_slicedToArray(arr, i) { return CalendarInputTimevue_type_script_lang_js_arrayWithHoles(arr) || CalendarInputTimevue_type_script_lang_js_iterableToArrayLimit(arr, i) || CalendarInputTimevue_type_script_lang_js_unsupportedIterableToArray(arr, i) || CalendarInputTimevue_type_script_lang_js_nonIterableRest(); }

function CalendarInputTimevue_type_script_lang_js_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function CalendarInputTimevue_type_script_lang_js_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return CalendarInputTimevue_type_script_lang_js_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return CalendarInputTimevue_type_script_lang_js_arrayLikeToArray(o, minLen); }

function CalendarInputTimevue_type_script_lang_js_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function CalendarInputTimevue_type_script_lang_js_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function CalendarInputTimevue_type_script_lang_js_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }


/* harmony default export */ const CalendarInputTimevue_type_script_lang_js = ({
  props: {
    inputClass: [String, Object, Array],
    readonly: Boolean,
    timestamp: Number,
    language: String,
    step: Number
  },
  data: function data() {
    return {
      copyTimestamp: this.timestamp,
      format: 'HH:mm'
    };
  },
  emits: ['on-change'],
  computed: {
    dateUtil: function dateUtil() {
      return new _default(this.language);
    },
    formattedValue: function formattedValue() {
      if (this.copyTimestamp === 0) return '';
      return this.dateUtil.formatDate(this.dateUtil.fromUnix(this.copyTimestamp), this.format);
    }
  },
  watch: {
    timestamp: function timestamp(value) {
      this.copyTimestamp = value;
    }
  },
  methods: {
    onClickUp: function onClickUp() {
      if (this.copyTimestamp === 0) return false;
      this.copyTimestamp += this.step * 60;
      return this.$emit('on-change', this.dateUtil.fromUnix(this.copyTimestamp));
    },
    onClickDown: function onClickDown() {
      if (this.copyTimestamp === 0) return false;
      this.copyTimestamp -= this.step * 60;
      return this.$emit('on-change', this.dateUtil.fromUnix(this.copyTimestamp));
    },
    onChange: function onChange(e) {
      var _e$target$value$trim$ = e.target.value.trim().split(':'),
          _e$target$value$trim$2 = CalendarInputTimevue_type_script_lang_js_slicedToArray(_e$target$value$trim$, 2),
          hours = _e$target$value$trim$2[0],
          minutes = _e$target$value$trim$2[1];

      hours = parseInt(hours, 10);
      minutes = parseInt(minutes, 10); // eslint-disable-next-line no-restricted-globals

      if (isNaN(hours) || isNaN(minutes)) {
        return false;
      }

      var totalMinutes = hours * 60 + minutes;
      var startOfDate = this.dateUtil.startOf(this.dateUtil.fromUnix(this.copyTimestamp), 'd');
      var date = this.dateUtil.add(startOfDate, totalMinutes, 'm');
      return this.$emit('on-change', date);
    }
  }
});
;// CONCATENATED MODULE: ./src/Components/CalendarInputTime.vue?vue&type=script&lang=js
 
;// CONCATENATED MODULE: ./src/Components/CalendarInputTime.vue




;
const CalendarInputTime_exports_ = /*#__PURE__*/(0,exportHelper["default"])(CalendarInputTimevue_type_script_lang_js, [['render',CalendarInputTimevue_type_template_id_3f3a43b3_render]])

/* harmony default export */ const CalendarInputTime = (CalendarInputTime_exports_);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/CalendarDialog.vue?vue&type=script&lang=js
function CalendarDialogvue_type_script_lang_js_slicedToArray(arr, i) { return CalendarDialogvue_type_script_lang_js_arrayWithHoles(arr) || CalendarDialogvue_type_script_lang_js_iterableToArrayLimit(arr, i) || CalendarDialogvue_type_script_lang_js_unsupportedIterableToArray(arr, i) || CalendarDialogvue_type_script_lang_js_nonIterableRest(); }

function CalendarDialogvue_type_script_lang_js_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function CalendarDialogvue_type_script_lang_js_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return CalendarDialogvue_type_script_lang_js_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return CalendarDialogvue_type_script_lang_js_arrayLikeToArray(o, minLen); }

function CalendarDialogvue_type_script_lang_js_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function CalendarDialogvue_type_script_lang_js_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function CalendarDialogvue_type_script_lang_js_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }







/* harmony default export */ const CalendarDialogvue_type_script_lang_js = ({
  components: {
    Calendar: Calendar,
    CalendarInputDate: CalendarInputDate,
    CalendarInputTime: CalendarInputTime,
    SwitchButton: SwitchButton
  },
  props: {
    inline: {
      type: Boolean,
      "default": false
    },
    initialDates: {
      type: Array,
      validator: PropsValidator.isValidInitialDate,
      "default": function _default() {
        return [];
      }
    },
    language: {
      type: String,
      "default": 'en'
    },
    disabledDates: {
      type: Object,
      validator: PropsValidator.isValidDateRestriction,
      "default": function _default() {
        return {};
      }
    },
    availableDates: {
      type: Object,
      validator: PropsValidator.isValidDateRestriction,
      "default": function _default() {
        return {};
      }
    },
    showHelperButtons: {
      type: Boolean,
      "default": true
    },
    helperButtons: {
      type: Array,
      validator: PropsValidator.isValidHelperButtons,
      "default": function _default() {
        return [];
      }
    },
    timeInput: {
      type: Object,
      "default": function _default() {
        return {
          inputClass: null,
          readonly: false,
          step: 60 // in minutes

        };
      }
    },
    dateInput: {
      type: Object,
      "default": function _default() {
        return {
          labelStarts: 'Starts',
          labelEnds: 'Ends',
          inputClass: null,
          format: 'DD/MM/YYYY',
          readonly: false
        };
      }
    },
    switchButtonLabel: {
      type: String,
      "default": 'All Days'
    },
    switchButtonInitial: {
      type: Boolean,
      "default": false
    },
    applyButtonLabel: {
      type: String,
      "default": 'Apply'
    },
    resetButtonLabel: {
      type: String,
      "default": 'Reset'
    },
    isMondayFirst: {
      type: Boolean,
      "default": false
    }
  },
  data: function data() {
    var dateUtil = new _default(this.language);

    var _this$initialDates = CalendarDialogvue_type_script_lang_js_slicedToArray(this.initialDates, 2),
        from = _this$initialDates[0],
        to = _this$initialDates[1];

    var isAllDay = this.switchButtonInitial;

    if (from && to) {
      if (dateUtil.isAllDay(from, to)) {
        isAllDay = true;
      } else {
        isAllDay = false;
      }
    }

    return {
      selectedStartDate: from !== null && from !== void 0 ? from : null,
      selectedEndDate: to !== null && to !== void 0 ? to : null,
      isAllDay: isAllDay
    };
  },
  emits: ['on-apply', 'on-reset', 'select-date', 'select-disabled-date', 'on-prev-calendar', 'on-next-calendar'],
  computed: {
    dateUtil: function dateUtil() {
      return new _default(this.language);
    },
    helpers: function helpers() {
      if (!this.showHelperButtons) return [];
      if (this.helperButtons.length) return this.helperButtons;
      return this.getDefaultHelpers();
    },
    unixSelectedStartDate: function unixSelectedStartDate() {
      if (!this.selectedStartDate) {
        return 0;
      }

      return this.dateUtil.toUnix(this.selectedStartDate);
    },
    unixSelectedEndDate: function unixSelectedEndDate() {
      if (!this.selectedEndDate) {
        return 0;
      }

      return this.dateUtil.toUnix(this.selectedEndDate);
    },
    isVisibleTimeInput: function isVisibleTimeInput() {
      return !this.isAllDay;
    },
    isVisibleButtonApply: function isVisibleButtonApply() {
      return !this.inline;
    }
  },
  methods: {
    onCheckChange: function onCheckChange(check) {
      this.isAllDay = check;
      if (!this.selectedStartDate || !this.selectedEndDate) return;
      this.selectedStartDate = this.dateUtil.startOf(this.selectedStartDate, 'd');

      if (check) {
        this.selectedEndDate = this.dateUtil.endOf(this.selectedEndDate, 'd');
      } else {
        this.selectedEndDate = this.dateUtil.startOf(this.selectedEndDate, 'd');
      }
    },
    onStartInputDateChange: function onStartInputDateChange(value) {
      this.applyOrSwapApply(value, this.selectedEndDate);
      this.emitOnApplyIfInline();
    },
    onEndDateInputDateChange: function onEndDateInputDateChange(value) {
      this.applyOrSwapApply(this.selectedStartDate, value);
      this.emitOnApplyIfInline();
    },
    onTimeStartInputChange: function onTimeStartInputChange(value) {
      this.applyOrSwapApply(value, this.selectedEndDate);
      this.emitOnApplyIfInline();
    },
    onTimeEndInputChange: function onTimeEndInputChange(value) {
      this.applyOrSwapApply(this.selectedStartDate, value);
      this.emitOnApplyIfInline();
    },
    onHelperClick: function onHelperClick(fromDate, toDate) {
      if (this.dateUtil.isAllDay(fromDate, toDate)) {
        this.isAllDay = true;
      } else {
        this.isAllDay = false;
      }

      this.applyOrSwapApply(fromDate, toDate);
      this.$emit('select-date', this.selectedStartDate, this.selectedEndDate);
      this.emitOnApplyIfInline();
    },
    onClickButtonApply: function onClickButtonApply() {
      this.$emit('on-apply', this.selectedStartDate, this.selectedEndDate);
    },
    onClickButtonReset: function onClickButtonReset() {
      this.selectedStartDate = null;
      this.selectedEndDate = null;
      this.isAllDay = false;
      this.$emit('on-reset');
    },
    selectDate: function selectDate(date) {
      var startDate = this.selectedStartDate;
      var endDate = this.selectedEndDate;

      if (this.dateUtil.isValidDate(startDate) && this.dateUtil.isValidDate(endDate) && this.dateUtil.isSameDate(startDate, endDate)) {
        endDate = date;
      } else {
        startDate = date;
        endDate = date;
      }

      this.applyOrSwapApply(startDate, endDate);

      if (this.isAllDay) {
        this.selectedStartDate = this.dateUtil.startOf(this.selectedStartDate, 'd');
        this.selectedEndDate = this.dateUtil.endOf(this.selectedEndDate, 'd');
      }

      this.$emit('select-date', this.selectedStartDate, this.selectedEndDate);
      this.emitOnApplyIfInline();
    },
    selectDisabledDate: function selectDisabledDate(date) {
      this.$emit('select-disabled-date', date);
    },
    applyOrSwapApply: function applyOrSwapApply(startDate, endDate) {
      if (this.dateUtil.isAfter(startDate, endDate)) {
        var _ref = [endDate, startDate];
        this.selectedStartDate = _ref[0];
        this.selectedEndDate = _ref[1];
      } else {
        this.selectedStartDate = startDate;
        this.selectedEndDate = endDate;
      }
    },
    emitOnApplyIfInline: function emitOnApplyIfInline() {
      if (this.inline) {
        this.$emit('on-apply', this.selectedStartDate, this.selectedEndDate);
      }
    },
    getDefaultHelpers: function getDefaultHelpers() {
      var now = new Date();
      var yesterday = this.dateUtil.subtract(now, 1, 'd');
      var lastWeek = this.dateUtil.subtract(now, 7, 'd');
      var lastMonth = this.dateUtil.subtract(now, 1, 'M');
      var lastYear = this.dateUtil.subtract(now, 1, 'y');
      var todayFrom = this.dateUtil.startOf(now, 'd');
      var todayTo = this.dateUtil.endOf(now, 'd');
      var yesterdayFrom = this.dateUtil.startOf(yesterday, 'd');
      var yesterdayTo = this.dateUtil.endOf(yesterday, 'd');
      var thisWeekFrom = this.dateUtil.startOf(now, 'week');
      var thisWeekTo = this.dateUtil.endOf(now, 'week');
      var lastWeekFrom = this.dateUtil.startOf(lastWeek, 'week');
      var lastWeekTo = this.dateUtil.endOf(lastWeek, 'week');
      var thisMonthFrom = this.dateUtil.startOf(now, 'month');
      var thisMonthTo = this.dateUtil.endOf(now, 'month');
      var lastMonthFrom = this.dateUtil.startOf(lastMonth, 'month');
      var lastMonthTo = this.dateUtil.endOf(lastMonth, 'month');
      var thisYearFrom = this.dateUtil.startOf(now, 'year');
      var thisYearTo = this.dateUtil.endOf(now, 'year');
      var lastYearFrom = this.dateUtil.startOf(lastYear, 'year');
      var lastYearTo = this.dateUtil.endOf(lastYear, 'year');
      return [{
        name: 'Today',
        from: todayFrom,
        to: todayTo
      }, {
        name: 'Yesterday',
        from: yesterdayFrom,
        to: yesterdayTo
      }, {
        name: 'This Week',
        from: thisWeekFrom,
        to: thisWeekTo
      }, {
        name: 'Last Week',
        from: lastWeekFrom,
        to: lastWeekTo
      }, {
        name: 'This Month',
        from: thisMonthFrom,
        to: thisMonthTo
      }, {
        name: 'Last Month',
        from: lastMonthFrom,
        to: lastMonthTo
      }, {
        name: 'This Year',
        from: thisYearFrom,
        to: thisYearTo
      }, {
        name: 'Last Year',
        from: lastYearFrom,
        to: lastYearTo
      }];
    },
    onPrevCalendar: function onPrevCalendar() {
      this.$emit('on-prev-calendar');
    },
    onNextCalendar: function onNextCalendar() {
      this.$emit('on-next-calendar');
    }
  }
});
;// CONCATENATED MODULE: ./src/Components/CalendarDialog.vue?vue&type=script&lang=js
 
;// CONCATENATED MODULE: ./src/Components/CalendarDialog.vue




;


const CalendarDialog_exports_ = /*#__PURE__*/(0,exportHelper["default"])(CalendarDialogvue_type_script_lang_js, [['render',CalendarDialogvue_type_template_id_65ac0926_render]])

/* harmony default export */ const CalendarDialog = (CalendarDialog_exports_);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./src/Components/DatePicker.vue?vue&type=script&lang=js
function DatePickervue_type_script_lang_js_slicedToArray(arr, i) { return DatePickervue_type_script_lang_js_arrayWithHoles(arr) || DatePickervue_type_script_lang_js_iterableToArrayLimit(arr, i) || DatePickervue_type_script_lang_js_unsupportedIterableToArray(arr, i) || DatePickervue_type_script_lang_js_nonIterableRest(); }

function DatePickervue_type_script_lang_js_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function DatePickervue_type_script_lang_js_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return DatePickervue_type_script_lang_js_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return DatePickervue_type_script_lang_js_arrayLikeToArray(o, minLen); }

function DatePickervue_type_script_lang_js_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function DatePickervue_type_script_lang_js_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function DatePickervue_type_script_lang_js_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }






/* harmony default export */ const DatePickervue_type_script_lang_js = ({
  components: {
    DateInput: DateInput,
    CalendarDialog: CalendarDialog
  },
  props: {
    initialDates: {
      type: Array,
      validator: PropsValidator.isValidInitialDate,
      "default": function _default() {
        return [];
      }
    },
    inline: {
      type: Boolean,
      "default": false
    },
    language: {
      type: String,
      "default": 'en'
    },
    format: {
      type: String,
      "default": 'DD/MM/YYYY HH:mm'
    },
    sameDateFormat: {
      type: Object,
      validator: PropsValidator.isValidSameDateFormat,
      "default": function _default() {
        return {
          from: 'DD/MM/YYYY, HH:mm',
          to: 'HH:mm'
        };
      }
    },
    dateInput: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    disabledDates: Object,
    availableDates: Object,
    showHelperButtons: Boolean,
    helperButtons: Array,
    calendarDateInput: Object,
    calendarTimeInput: Object,
    switchButtonLabel: String,
    switchButtonInitial: Boolean,
    applyButtonLabel: String,
    resetButtonLabel: String,
    isMondayFirst: Boolean
  },
  data: function data() {
    var _this$initialDates = DatePickervue_type_script_lang_js_slicedToArray(this.initialDates, 2),
        fromDate = _this$initialDates[0],
        toDate = _this$initialDates[1];

    var showCalendarDialog = this.inline;
    return {
      selectedStartDate: fromDate !== null && fromDate !== void 0 ? fromDate : null,
      selectedEndDate: toDate !== null && toDate !== void 0 ? toDate : null,
      showCalendarDialog: showCalendarDialog
    };
  },
  emits: ['date-applied', 'datepicker-opened', 'datepicker-closed', 'on-prev-calendar', 'on-next-calendar', 'select-date', 'select-disabled-date', 'on-reset'],
  computed: {
    dateUtil: function dateUtil() {
      return new _default(this.language);
    },
    showingDateInput: function showingDateInput() {
      return !this.inline;
    },
    showingCalendarDialog: function showingCalendarDialog() {
      return this.showCalendarDialog || this.inline;
    }
  },
  methods: {
    onApply: function onApply(date1, date2) {
      if (!date1 || !date2) return false;
      this.selectedStartDate = date1;
      this.selectedEndDate = date2;

      if (!this.inline) {
        this.showCalendarDialog = false;
      }

      return this.$emit('date-applied', date1, date2);
    },
    onReset: function onReset() {
      this.selectedStartDate = null;
      this.selectedEndDate = null;
      this.$emit('on-reset');
    },
    onClickDateInput: function onClickDateInput() {
      if (this.inline) return;
      this.showCalendarDialog = !this.showCalendarDialog;

      if (this.showCalendarDialog) {
        this.$emit('datepicker-opened');
      } else {
        this.$emit('datepicker-closed');
      }
    },
    onPrevCalendar: function onPrevCalendar() {
      this.$emit('on-prev-calendar');
    },
    onNextCalendar: function onNextCalendar() {
      this.$emit('on-next-calendar');
    },
    selectDate: function selectDate(date1, date2) {
      this.$emit('select-date', date1, date2);
    },
    selectDisabledDate: function selectDisabledDate(date) {
      this.$emit('select-disabled-date', date);
    }
  }
});
;// CONCATENATED MODULE: ./src/Components/DatePicker.vue?vue&type=script&lang=js
 
;// CONCATENATED MODULE: ./src/Components/DatePicker.vue




;


const DatePicker_exports_ = /*#__PURE__*/(0,exportHelper["default"])(DatePickervue_type_script_lang_js, [['render',render]])

/* harmony default export */ const DatePicker = (DatePicker_exports_);
})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=vdprDatePicker.js.map